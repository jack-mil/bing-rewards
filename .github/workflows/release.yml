name: Release Please

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  release-please:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      # see: https://github.com/googleapis/release-please-action/issues/1105
      issues: write
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      prs_created: ${{ steps.release.outputs.prs_created }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: .github/release-please-config.json
          manifest-file: .github/.release-please-manifest.json

  # On every commit
  publish-test:
    name: Publish to Test PyPI
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.prs_created }}
    environment:
      name: testpypi
      url: https://test.pypi.org/p/bing-rewards
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
            python-version-file: 'pyproject.toml'
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      # unique dev version for every upload
      - run: uv version --no-sync $(uvx dunamai from git --no-metadata --bump)
      - run: uv build
      - run: uv publish --publish-url https://test.pypi.org/legacy/ --check-url https://test.pypi.org/simple/

  # Only when release is created
  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    environment:
      name: pypi
      url: https://pypi.org/p/bing-rewards
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - uses: actions/checkout@v4 # will checkout release commit on master
      - uses: actions/setup-python@v5
        with:
            python-version-file: 'pyproject.toml'
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - run: uv build
      - run: uv publish
